// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: lithengine.proto

package lithengine

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 结构体类型，函数，代码块也被认为是一个特殊的结构体
type StructType int32

const (
	StructType_undefined StructType = 0
	StructType_bool      StructType = 1
	StructType_int64     StructType = 2
	StructType_double    StructType = 3
	StructType_string    StructType = 4
	StructType_nil       StructType = 5
	StructType_list      StructType = 6
	StructType_hash      StructType = 7
	StructType_function  StructType = 8  //函数，会在【传参前先执行】得到结果，然后将结果传参给调用函数
	StructType_return    StructType = 10 //reture类型，在chain函数顺序执行过程中，如果表达式返回return类型将终止后续流程，直接返回reture类型中的结果
	StructType_pointer   StructType = 11 //指针 配合set get可以用来做变量功能
)

// Enum value maps for StructType.
var (
	StructType_name = map[int32]string{
		0:  "undefined",
		1:  "bool",
		2:  "int64",
		3:  "double",
		4:  "string",
		5:  "nil",
		6:  "list",
		7:  "hash",
		8:  "function",
		10: "return",
		11: "pointer",
	}
	StructType_value = map[string]int32{
		"undefined": 0,
		"bool":      1,
		"int64":     2,
		"double":    3,
		"string":    4,
		"nil":       5,
		"list":      6,
		"hash":      7,
		"function":  8,
		"return":    10,
		"pointer":   11,
	}
)

func (x StructType) Enum() *StructType {
	p := new(StructType)
	*p = x
	return p
}

func (x StructType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StructType) Descriptor() protoreflect.EnumDescriptor {
	return file_lithengine_proto_enumTypes[0].Descriptor()
}

func (StructType) Type() protoreflect.EnumType {
	return &file_lithengine_proto_enumTypes[0]
}

func (x StructType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StructType.Descriptor instead.
func (StructType) EnumDescriptor() ([]byte, []int) {
	return file_lithengine_proto_rawDescGZIP(), []int{0}
}

// 结构体定义
type Struct struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"type,omitempty"
	StructType StructType         `protobuf:"varint,1,opt,name=structType,proto3,enum=lithengine.StructType" json:"type,omitempty"`
	Int64      int64              `protobuf:"varint,2,opt,name=int64,proto3" json:"int64,omitempty"`
	String_    string             `protobuf:"bytes,3,opt,name=string,proto3" json:"string,omitempty"`
	Double     float64            `protobuf:"fixed64,4,opt,name=double,proto3" json:"double,omitempty"`
	Bool       bool               `protobuf:"varint,5,opt,name=bool,proto3" json:"bool,omitempty"`
	Nil        bool               `protobuf:"varint,6,opt,name=nil,proto3" json:"nil,omitempty"`
	List       []*Struct          `protobuf:"bytes,7,rep,name=list,proto3" json:"list,omitempty"`
	Hash       map[string]*Struct `protobuf:"bytes,8,rep,name=hash,proto3" json:"hash,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// @inject_tag: json:"func,omitempty"
	FuncId string `protobuf:"bytes,10,opt,name=funcId,proto3" json:"func,omitempty"` //函数ID
	// @inject_tag: json:"closure,omitempty"
	Closure bool `protobuf:"varint,11,opt,name=closure,proto3" json:"closure,omitempty"` //closure函数 会作为参数传递给执行函数，由执行函数选择性执行【传参前不执行】
	// @inject_tag: json:"name,omitempty"
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"` //函数名称
	// @inject_tag: json:"schema,omitempty"
	Schema *FunctionSchema `protobuf:"bytes,13,opt,name=schema,proto3" json:"schema,omitempty"` //函数定义
	// @inject_tag: json:"input,omitempty"
	FuncInput []*Struct          `protobuf:"bytes,14,rep,name=funcInput,proto3" json:"input,omitempty"`                                                                 //函数的输入
	Args      map[string]*Struct `protobuf:"bytes,15,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //环境变量
	Return    []*Struct          `protobuf:"bytes,16,rep,name=return,proto3" json:"return,omitempty"`                                                                       //return具体数据
	Pointer   *Struct            `protobuf:"bytes,17,opt,name=pointer,proto3" json:"pointer,omitempty"`                                                                     //指针类型
	// @inject_tag: json:"id,omitempty"
	Id string `protobuf:"bytes,18,opt,name=id,proto3" json:"id,omitempty"` //Struct唯一ID,用于异常跟踪等功能
	// @inject_tag: json:"optional,omitempty"
	Optional      bool `protobuf:"varint,19,opt,name=optional,proto3" json:"optional,omitempty"` //用于Schema 参数是否必传设置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Struct) Reset() {
	*x = Struct{}
	mi := &file_lithengine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Struct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Struct) ProtoMessage() {}

func (x *Struct) ProtoReflect() protoreflect.Message {
	mi := &file_lithengine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Struct.ProtoReflect.Descriptor instead.
func (*Struct) Descriptor() ([]byte, []int) {
	return file_lithengine_proto_rawDescGZIP(), []int{0}
}

func (x *Struct) GetStructType() StructType {
	if x != nil {
		return x.StructType
	}
	return StructType_undefined
}

func (x *Struct) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *Struct) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *Struct) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *Struct) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *Struct) GetNil() bool {
	if x != nil {
		return x.Nil
	}
	return false
}

func (x *Struct) GetList() []*Struct {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *Struct) GetHash() map[string]*Struct {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Struct) GetFuncId() string {
	if x != nil {
		return x.FuncId
	}
	return ""
}

func (x *Struct) GetClosure() bool {
	if x != nil {
		return x.Closure
	}
	return false
}

func (x *Struct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Struct) GetSchema() *FunctionSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *Struct) GetFuncInput() []*Struct {
	if x != nil {
		return x.FuncInput
	}
	return nil
}

func (x *Struct) GetArgs() map[string]*Struct {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Struct) GetReturn() []*Struct {
	if x != nil {
		return x.Return
	}
	return nil
}

func (x *Struct) GetPointer() *Struct {
	if x != nil {
		return x.Pointer
	}
	return nil
}

func (x *Struct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Struct) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

// 函数定义Schema，可以定义函数的输入/输出数据类型，用于后续参数校验
type FunctionSchema struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"inputType,omitempty"
	InputType []*Struct `protobuf:"bytes,3,rep,name=inputType,proto3" json:"inputType,omitempty"` //输入变量定义
	// @inject_tag: json:"outputType,omitempty"
	OutputType    []*Struct `protobuf:"bytes,4,rep,name=outputType,proto3" json:"outputType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionSchema) Reset() {
	*x = FunctionSchema{}
	mi := &file_lithengine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSchema) ProtoMessage() {}

func (x *FunctionSchema) ProtoReflect() protoreflect.Message {
	mi := &file_lithengine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSchema.ProtoReflect.Descriptor instead.
func (*FunctionSchema) Descriptor() ([]byte, []int) {
	return file_lithengine_proto_rawDescGZIP(), []int{1}
}

func (x *FunctionSchema) GetInputType() []*Struct {
	if x != nil {
		return x.InputType
	}
	return nil
}

func (x *FunctionSchema) GetOutputType() []*Struct {
	if x != nil {
		return x.OutputType
	}
	return nil
}

var File_lithengine_proto protoreflect.FileDescriptor

const file_lithengine_proto_rawDesc = "" +
	"\n" +
	"\x10lithengine.proto\x12\n" +
	"lithengine\"\x84\x06\n" +
	"\x06Struct\x126\n" +
	"\n" +
	"structType\x18\x01 \x01(\x0e2\x16.lithengine.StructTypeR\n" +
	"structType\x12\x14\n" +
	"\x05int64\x18\x02 \x01(\x03R\x05int64\x12\x16\n" +
	"\x06string\x18\x03 \x01(\tR\x06string\x12\x16\n" +
	"\x06double\x18\x04 \x01(\x01R\x06double\x12\x12\n" +
	"\x04bool\x18\x05 \x01(\bR\x04bool\x12\x10\n" +
	"\x03nil\x18\x06 \x01(\bR\x03nil\x12&\n" +
	"\x04list\x18\a \x03(\v2\x12.lithengine.StructR\x04list\x120\n" +
	"\x04hash\x18\b \x03(\v2\x1c.lithengine.Struct.HashEntryR\x04hash\x12\x16\n" +
	"\x06funcId\x18\n" +
	" \x01(\tR\x06funcId\x12\x18\n" +
	"\aclosure\x18\v \x01(\bR\aclosure\x12\x12\n" +
	"\x04name\x18\f \x01(\tR\x04name\x122\n" +
	"\x06schema\x18\r \x01(\v2\x1a.lithengine.FunctionSchemaR\x06schema\x120\n" +
	"\tfuncInput\x18\x0e \x03(\v2\x12.lithengine.StructR\tfuncInput\x120\n" +
	"\x04args\x18\x0f \x03(\v2\x1c.lithengine.Struct.ArgsEntryR\x04args\x12*\n" +
	"\x06return\x18\x10 \x03(\v2\x12.lithengine.StructR\x06return\x12,\n" +
	"\apointer\x18\x11 \x01(\v2\x12.lithengine.StructR\apointer\x12\x0e\n" +
	"\x02id\x18\x12 \x01(\tR\x02id\x12\x1a\n" +
	"\boptional\x18\x13 \x01(\bR\boptional\x1aK\n" +
	"\tHashEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.lithengine.StructR\x05value:\x028\x01\x1aK\n" +
	"\tArgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.lithengine.StructR\x05value:\x028\x01\"v\n" +
	"\x0eFunctionSchema\x120\n" +
	"\tinputType\x18\x03 \x03(\v2\x12.lithengine.StructR\tinputType\x122\n" +
	"\n" +
	"outputType\x18\x04 \x03(\v2\x12.lithengine.StructR\n" +
	"outputType*\x8c\x01\n" +
	"\n" +
	"StructType\x12\r\n" +
	"\tundefined\x10\x00\x12\b\n" +
	"\x04bool\x10\x01\x12\t\n" +
	"\x05int64\x10\x02\x12\n" +
	"\n" +
	"\x06double\x10\x03\x12\n" +
	"\n" +
	"\x06string\x10\x04\x12\a\n" +
	"\x03nil\x10\x05\x12\b\n" +
	"\x04list\x10\x06\x12\b\n" +
	"\x04hash\x10\a\x12\f\n" +
	"\bfunction\x10\b\x12\n" +
	"\n" +
	"\x06return\x10\n" +
	"\x12\v\n" +
	"\apointer\x10\vB+Z)github.com/liangdas/lithengine/lithengineb\x06proto3"

var (
	file_lithengine_proto_rawDescOnce sync.Once
	file_lithengine_proto_rawDescData []byte
)

func file_lithengine_proto_rawDescGZIP() []byte {
	file_lithengine_proto_rawDescOnce.Do(func() {
		file_lithengine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lithengine_proto_rawDesc), len(file_lithengine_proto_rawDesc)))
	})
	return file_lithengine_proto_rawDescData
}

var file_lithengine_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lithengine_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_lithengine_proto_goTypes = []any{
	(StructType)(0),        // 0: lithengine.StructType
	(*Struct)(nil),         // 1: lithengine.Struct
	(*FunctionSchema)(nil), // 2: lithengine.FunctionSchema
	nil,                    // 3: lithengine.Struct.HashEntry
	nil,                    // 4: lithengine.Struct.ArgsEntry
}
var file_lithengine_proto_depIdxs = []int32{
	0,  // 0: lithengine.Struct.structType:type_name -> lithengine.StructType
	1,  // 1: lithengine.Struct.list:type_name -> lithengine.Struct
	3,  // 2: lithengine.Struct.hash:type_name -> lithengine.Struct.HashEntry
	2,  // 3: lithengine.Struct.schema:type_name -> lithengine.FunctionSchema
	1,  // 4: lithengine.Struct.funcInput:type_name -> lithengine.Struct
	4,  // 5: lithengine.Struct.args:type_name -> lithengine.Struct.ArgsEntry
	1,  // 6: lithengine.Struct.return:type_name -> lithengine.Struct
	1,  // 7: lithengine.Struct.pointer:type_name -> lithengine.Struct
	1,  // 8: lithengine.FunctionSchema.inputType:type_name -> lithengine.Struct
	1,  // 9: lithengine.FunctionSchema.outputType:type_name -> lithengine.Struct
	1,  // 10: lithengine.Struct.HashEntry.value:type_name -> lithengine.Struct
	1,  // 11: lithengine.Struct.ArgsEntry.value:type_name -> lithengine.Struct
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_lithengine_proto_init() }
func file_lithengine_proto_init() {
	if File_lithengine_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lithengine_proto_rawDesc), len(file_lithengine_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lithengine_proto_goTypes,
		DependencyIndexes: file_lithengine_proto_depIdxs,
		EnumInfos:         file_lithengine_proto_enumTypes,
		MessageInfos:      file_lithengine_proto_msgTypes,
	}.Build()
	File_lithengine_proto = out.File
	file_lithengine_proto_goTypes = nil
	file_lithengine_proto_depIdxs = nil
}
